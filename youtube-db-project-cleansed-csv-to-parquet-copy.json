{
	"jobConfig": {
		"name": "youtube-db-project-cleansed-csv-to-parquet-copy",
		"description": "",
		"role": "arn:aws:iam::851725231386:role/youtube-db-project-glue-s3-role",
		"command": "glueetl",
		"version": "4.0",
		"runtime": null,
		"workerType": "G.1X",
		"numberOfWorkers": 10,
		"maxCapacity": 10,
		"maxRetries": 0,
		"timeout": 2880,
		"maxConcurrentRuns": 1,
		"security": "none",
		"scriptName": "youtube-db-project-cleansed-csv-to-parquet-copy.py",
		"scriptLocation": "s3://aws-glue-assets-851725231386-us-east-2/scripts/",
		"language": "python-3",
		"spark": true,
		"sparkConfiguration": "standard",
		"jobParameters": [],
		"tags": [],
		"jobMode": "DEVELOPER_MODE",
		"createdOn": "2024-04-28T16:46:02.995Z",
		"developerMode": true,
		"connectionsList": [],
		"temporaryDirectory": "s3://aws-glue-assets-851725231386-us-east-2/temporary/",
		"logging": true,
		"glueHiveMetastore": true,
		"etlAutoTuning": false,
		"metrics": true,
		"observabilityMetrics": true,
		"bookmark": "job-bookmark-enable",
		"sparkPath": "s3://aws-glue-assets-851725231386-us-east-2/sparkHistoryLogs/",
		"flexExecution": false,
		"minFlexWorkers": null
	},
	"hasBeenSaved": false,
	"script": "import sys\nfrom awsglue.transforms import *\nfrom awsglue.utils import getResolvedOptions\nfrom pyspark.context import SparkContext\nfrom awsglue.context import GlueContext\nfrom awsglue.job import Job\nfrom awsglue.dynamicframe import DynamicFrame\n\nargs = getResolvedOptions(sys.argv, ['JOB_NAME'])\nsc = SparkContext()\nglueContext = GlueContext(sc)\nspark = glueContext.spark_session\njob = Job(glueContext)\njob.init(args['JOB_NAME'], args)\n\npredicate_pushdown = \"region in ('ca','gb','us')\"\n# Script generated for node AWS Glue Data Catalog\nAWSGlueDataCatalog_node1714321904810 = glueContext.create_dynamic_frame.from_catalog(database=\"youtube-db-project-raw\", table_name=\"raw_statistics\", transformation_ctx=\"AWSGlueDataCatalog_node1714321904810\",push_down_predicate = predicate_pushdown)\n\n# Script generated for node Change Schema\nChangeSchema_node1714321948619 = ApplyMapping.apply(frame=AWSGlueDataCatalog_node1714321904810, mappings=[(\"video_id\", \"string\", \"video_id\", \"string\"), (\"trending_date\", \"string\", \"trending_date\", \"string\"), (\"title\", \"string\", \"title\", \"string\"), (\"channel_title\", \"string\", \"channel_title\", \"string\"), (\"category_id\", \"long\", \"category_id\", \"bigint\"), (\"publish_time\", \"string\", \"publish_time\", \"string\"), (\"tags\", \"string\", \"tags\", \"string\"), (\"views\", \"long\", \"views\", \"bigint\"), (\"likes\", \"long\", \"likes\", \"bigint\"), (\"dislikes\", \"long\", \"dislikes\", \"bigint\"), (\"comment_count\", \"long\", \"comment_count\", \"bigint\"), (\"thumbnail_link\", \"string\", \"thumbnail_link\", \"string\"), (\"comments_disabled\", \"boolean\", \"comments_disabled\", \"boolean\"), (\"ratings_disabled\", \"boolean\", \"ratings_disabled\", \"boolean\"), (\"video_error_or_removed\", \"boolean\", \"video_error_or_removed\", \"boolean\"), (\"description\", \"string\", \"description\", \"string\"), (\"region\", \"string\", \"region\", \"string\")], transformation_ctx=\"ChangeSchema_node1714321948619\")\n\nresolvechoice2 = ResolveChoice.apply(frame = ChangeSchema_node1714321948619, choice = \"make_struct\", transformation_ctx = \"resolvechoice2\")\n\ndropnullfields3 = DropNullFields.apply(frame = resolvechoice2, transformation_ctx = \"dropnullfields3\")\n\n# Script generated for node Amazon S3\nAmazonS3_node1714321974955 = glueContext.write_dynamic_frame.from_options(frame=ChangeSchema_node1714321948619, connection_type=\"s3\", format=\"glueparquet\", connection_options={\"path\": \"s3://youtube-db-project-cleansed/raw_statistics/\", \"partitionKeys\": [\"region\"]}, format_options={\"compression\": \"snappy\"}, transformation_ctx=\"AmazonS3_node1714321974955\")\n\ndatasink1 = dropnullfields3.toDF().coalesce(1)\ndf_final_output = DynamicFrame.fromDF(datasink1, glueContext, \"df_final_output\")\ndatasink4 = glueContext.write_dynamic_frame.from_options(frame = df_final_output, connection_type = \"s3\", connection_options = {\"path\": \"s3://youtube-db-project-cleansed/raw_statistics/\", \"partitionKeys\": [\"region\"]}, format = \"parquet\", transformation_ctx = \"datasink4\")\n\njob.commit()"
}